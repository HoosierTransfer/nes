std::string CPU::getAddressWithMode(AddressingMode mode) {
    std::stringstream ss;
    ss << std::uppercase;
    switch (mode) {
        case AddressingMode::IMP:
            break;
        case AddressingMode::ACC:
            ss << "A";
            break;
        case AddressingMode::IMM:
            ss << "#$" << std::hex << std::setw(2) << std::setfill('0') << (int)fetchLogs[1];
            break;
        case AddressingMode::ZP0:
            ss << "$" << std::hex << std::setw(2) << std::setfill('0') << (int)fetchLogs[1];
            break;
        case AddressingMode::ZPX:
            ss << "$" << std::hex << std::setw(2) << std::setfill('0') << (int)fetchLogs[1] << ",X";
            break;
        case AddressingMode::ZPY:
            ss << "$" << std::hex << std::setw(2) << std::setfill('0') << (int)fetchLogs[1] << ",Y";
            break;
        case AddressingMode::REL:
            ss << "$" << std::hex << std::setw(4) << std::setfill('0') << (int)branchLocation;
            break;
        case AddressingMode::ABS:
            ss << "$" << std::hex << std::setw(4) << std::setfill('0') << (int)fetchLogs[1] + (fetchLogs[2] << 8);
            break;
        case AddressingMode::ABX:
            ss << "$" << std::hex << std::setw(4) << std::setfill('0') << (int)fetchLogs[1] + (fetchLogs[2] << 8) << ",X";
            break;
        case AddressingMode::ABY:
            ss << "$" << std::hex << std::setw(4) << std::setfill('0') << (int)fetchLogs[1] + (fetchLogs[2] << 8) << ",Y";
            break;
        case AddressingMode::IND:
            ss << "($" << std::hex << std::setw(4) << std::setfill('0') << (int)fetchLogs[1] + (fetchLogs[2] << 8) << ")";
            break;
        case AddressingMode::IZX:
            ss << "($" << std::hex << std::setw(2) << std::setfill('0') << (int)fetchLogs[1] << ",X)";
            break;
        case AddressingMode::IZY:
            ss << "($" << std::hex << std::setw(2) << std::setfill('0') << (int)fetchLogs[1] << "),Y";
            break;
        case AddressingMode::NOP:
            break;
    }

    return ss.str();
}

std::string CPU::getInstruction() {
    uint8_t opcode = fetchLogs[0];

    std::string opcodeName = "NOP";
    AddressingMode mode = AddressingMode::NOP;

    switch (opcode) {
        case 0x00:
            opcodeName = "BRK";
            mode = AddressingMode::IMP;
            break;

        case 0x01:
            opcodeName = "ORA";
            mode = AddressingMode::IZX;
            break;

        case 0x02:
            opcodeName = "KIL";
            mode = AddressingMode::NOP;
            break;

        case 0x03:
            opcodeName = "*SLO";
            mode = AddressingMode::IZX;
            break;

        case 0x04:
            opcodeName = "*NOP";
            mode = AddressingMode::ZP0;
            break;

        case 0x05:
            opcodeName = "ORA";
            mode = AddressingMode::ZP0;
            break;

        case 0x06:
            opcodeName = "ASL";
            mode = AddressingMode::ZP0;
            break;

        case 0x07:
            opcodeName = "*SLO";
            mode = AddressingMode::ZP0;
            break;

        case 0x08:
            opcodeName = "PHP";
            mode = AddressingMode::IMP;
            break;

        case 0x09:
            opcodeName = "ORA";
            mode = AddressingMode::IMM;
            break;

        case 0x0A:
            opcodeName = "ASL";
            mode = AddressingMode::ACC;
            break;

        case 0x0B:
            opcodeName = "AAC";
            mode = AddressingMode::IMM;
            break;
        
        case 0x0C:
            opcodeName = "*NOP";
            mode = AddressingMode::ABS;
            break;

        case 0x0D:
            opcodeName = "ORA";
            mode = AddressingMode::ABS;
            break;

        case 0x0E:
            opcodeName = "ASL";
            mode = AddressingMode::ABS;
            break;

        case 0x0F:
            opcodeName = "*SLO";
            mode = AddressingMode::ABS;
            break;

        case 0x10:
            opcodeName = "BPL";
            mode = AddressingMode::REL;
            break;
        
        case 0x11:
            opcodeName = "ORA";
            mode = AddressingMode::IZY;
            break;
        
        case 0x12:
            opcodeName = "KIL";
            mode = AddressingMode::NOP;
            break;

        case 0x13:
            opcodeName = "*SLO";
            mode = AddressingMode::IZY;
            break;

        case 0x14:
            opcodeName = "*NOP";
            mode = AddressingMode::ZPX;
            break;

        case 0x15:
            opcodeName = "ORA";
            mode = AddressingMode::ZPX;
            break;

        case 0x16:
            opcodeName = "ASL";
            mode = AddressingMode::ZPX;
            break;

        case 0x17:
            opcodeName = "*SLO";
            mode = AddressingMode::ZPX;
            break;

        case 0x18:
            opcodeName = "CLC";
            mode = AddressingMode::IMP;
            break;

        case 0x19:
            opcodeName = "ORA";
            mode = AddressingMode::ABY;
            break;
        
        case 0x1A:
            opcodeName = "*NOP";
            mode = AddressingMode::IMP;
            break;

        case 0x1B:
            opcodeName = "*SLO";
            mode = AddressingMode::ABY;
            break;

        case 0x1C:
            opcodeName = "*NOP";
            mode = AddressingMode::ABX;
            break;

        case 0x1D:
            opcodeName = "ORA";
            mode = AddressingMode::ABX;
            break;

        case 0x1E:
            opcodeName = "ASL";
            mode = AddressingMode::ABX;
            break;

        case 0x1F:
            opcodeName = "*SLO";
            mode = AddressingMode::ABX;
            break;

        case 0x20:
            opcodeName = "JSR";
            mode = AddressingMode::ABS;
            break;
        
        case 0x21:
            opcodeName = "AND";
            mode = AddressingMode::IZX;
            break;

        case 0x22:
            opcodeName = "KIL";
            mode = AddressingMode::NOP;
            break;

        case 0x23:
            opcodeName = "*RLA";
            mode = AddressingMode::IZX;
            break;

        case 0x24:
            opcodeName = "BIT";
            mode = AddressingMode::ZP0;
            break;

        case 0x25:
            opcodeName = "AND";
            mode = AddressingMode::ZP0;
            break;

        case 0x26:
            opcodeName = "ROL";
            mode = AddressingMode::ZP0;
            break;

        case 0x27:
            opcodeName = "*RLA";
            mode = AddressingMode::ZP0;
            break;

        case 0x28:
            opcodeName = "PLP";
            mode = AddressingMode::IMP;
            break;

        case 0x29:
            opcodeName = "AND";
            mode = AddressingMode::IMM;
            break;

        case 0x2A:
            opcodeName = "ROL";
            mode = AddressingMode::ACC;
            break;

        case 0x2B:
            opcodeName = "ANC";
            mode = AddressingMode::IMM;
            break;

        case 0x2C:
            opcodeName = "BIT";
            mode = AddressingMode::ABS;
            break;

        case 0x2D:
            opcodeName = "AND";
            mode = AddressingMode::ABS;
            break;

        case 0x2E:
            opcodeName = "ROL";
            mode = AddressingMode::ABS;
            break;

        case 0x2F:
            opcodeName = "*RLA";
            mode = AddressingMode::ABS;
            break;

        case 0x30:
            opcodeName = "BMI";
            mode = AddressingMode::REL;
            break;

        case 0x31:
            opcodeName = "AND";
            mode = AddressingMode::IZY;
            break;

        case 0x32:
            opcodeName = "KIL";
            mode = AddressingMode::NOP;
            break;

        case 0x33:
            opcodeName = "*RLA";
            mode = AddressingMode::IZY;
            break;

        case 0x34:
            opcodeName = "*NOP";
            mode = AddressingMode::ZPX;
            break;

        case 0x35:
            opcodeName = "AND";
            mode = AddressingMode::ZPX;
            break;

        case 0x36:
            opcodeName = "ROL";
            mode = AddressingMode::ZPX;
            break;

        case 0x37:
            opcodeName = "*RLA";
            mode = AddressingMode::ZPX;
            break;

        case 0x38:
            opcodeName = "SEC";
            mode = AddressingMode::IMP;
            break;

        case 0x39:
            opcodeName = "AND";
            mode = AddressingMode::ABY;
            break;

        case 0x3A:
            opcodeName = "*NOP";
            mode = AddressingMode::IMP;
            break;

        case 0x3B:
            opcodeName = "*RLA";
            mode = AddressingMode::ABY;
            break;

        case 0x3C:
            opcodeName = "*NOP";
            mode = AddressingMode::ABX;
            break;

        case 0x3D:
            opcodeName = "AND";
            mode = AddressingMode::ABX;
            break;

        case 0x3E:
            opcodeName = "ROL";
            mode = AddressingMode::ABX;
            break;

        case 0x3F:
            opcodeName = "*RLA";
            mode = AddressingMode::ABX;
            break;

        case 0x40:
            opcodeName = "RTI";
            mode = AddressingMode::IMP;
            break;

        case 0x41:
            opcodeName = "EOR";
            mode = AddressingMode::IZX;
            break;

        case 0x42:
            opcodeName = "KIL";
            mode = AddressingMode::NOP;
            break;

        case 0x43:
            opcodeName = "*SRE";
            mode = AddressingMode::IZX;
            break;

        case 0x44:
            opcodeName = "*NOP";
            mode = AddressingMode::ZP0;
            break;

        case 0x45:
            opcodeName = "EOR";
            mode = AddressingMode::ZP0;
            break;

        case 0x46:
            opcodeName = "LSR";
            mode = AddressingMode::ZP0;
            break;

        case 0x47:
            opcodeName = "*SRE";
            mode = AddressingMode::ZP0;
            break;

        case 0x48:
            opcodeName = "PHA";
            mode = AddressingMode::IMP;
            break;

        case 0x49:
            opcodeName = "EOR";
            mode = AddressingMode::IMM;
            break;

        case 0x4A:
            opcodeName = "LSR";
            mode = AddressingMode::ACC;
            break;

        case 0x4B:
            opcodeName = "ASR";
            mode = AddressingMode::IMM;
            break;

        case 0x4C:
            opcodeName = "JMP";
            mode = AddressingMode::ABS;
            break;

        case 0x4D:
            opcodeName = "EOR";
            mode = AddressingMode::ABS;
            break;

        case 0x4E:
            opcodeName = "LSR";
            mode = AddressingMode::ABS;
            break;

        case 0x4F:
            opcodeName = "*SRE";
            mode = AddressingMode::ABS;
            break;

        case 0x50:
            opcodeName = "BVC";
            mode = AddressingMode::REL;
            break;

        case 0x51:
            opcodeName = "EOR";
            mode = AddressingMode::IZY;
            break;

        case 0x52:
            opcodeName = "KIL";
            mode = AddressingMode::NOP;
            break;

        case 0x53:
            opcodeName = "*SRE";
            mode = AddressingMode::IZY;
            break;
        
        case 0x54:
            opcodeName = "*NOP";
            mode = AddressingMode::ZPX;
            break;

        case 0x55:
            opcodeName = "EOR";
            mode = AddressingMode::ZPX;
            break;

        case 0x56:
            opcodeName = "LSR";
            mode = AddressingMode::ZPX;
            break;

        case 0x57:
            opcodeName = "*SRE";
            mode = AddressingMode::ZPX;
            break;

        case 0x58:
            opcodeName = "CLI";
            mode = AddressingMode::IMP;
            break;

        case 0x59:
            opcodeName = "EOR";
            mode = AddressingMode::ABY;
            break;

        case 0x5A:
            opcodeName = "*NOP";
            mode = AddressingMode::IMP;
            break;

        case 0x5B:
            opcodeName = "*SRE";
            mode = AddressingMode::ABY;
            break;

        case 0x5C:
            opcodeName = "*NOP";
            mode = AddressingMode::ABX;
            break;

        case 0x5D:
            opcodeName = "EOR";
            mode = AddressingMode::ABX;
            break;

        case 0x5E:
            opcodeName = "LSR";
            mode = AddressingMode::ABX;
            break;

        case 0x5F:
            opcodeName = "*SRE";
            mode = AddressingMode::ABX;
            break;

        case 0x60:
            opcodeName = "RTS";
            mode = AddressingMode::IMP;
            break;

        case 0x61:
            opcodeName = "ADC";
            mode = AddressingMode::IZX;
            break;

        case 0x62:
            opcodeName = "KIL";
            mode = AddressingMode::NOP;
            break;

        case 0x63:
            opcodeName = "*RRA";
            mode = AddressingMode::IZX;
            break;

        case 0x64:
            opcodeName = "*NOP";
            mode = AddressingMode::ZP0;
            break;

        case 0x65:
            opcodeName = "ADC";
            mode = AddressingMode::ZP0;
            break;

        case 0x66:
            opcodeName = "ROR";
            mode = AddressingMode::ZP0;
            break;

        case 0x67:
            opcodeName = "*RRA";
            mode = AddressingMode::ZP0;
            break;

        case 0x68:
            opcodeName = "PLA";
            mode = AddressingMode::IMP;
            break;

        case 0x69:
            opcodeName = "ADC";
            mode = AddressingMode::IMM;
            break;

        case 0x6A:
            opcodeName = "ROR";
            mode = AddressingMode::ACC;
            break;

        case 0x6B:
            opcodeName = "ARR";
            mode = AddressingMode::IMM;
            break;

        case 0x6C:
            opcodeName = "JMP";
            mode = AddressingMode::IND;
            break;

        case 0x6D:
            opcodeName = "ADC";
            mode = AddressingMode::ABS;
            break;

        case 0x6E:
            opcodeName = "ROR";
            mode = AddressingMode::ABS;
            break;

        case 0x6F:
            opcodeName = "*RRA";
            mode = AddressingMode::ABS;
            break;

        case 0x70:
            opcodeName = "BVS";
            mode = AddressingMode::REL;
            break;

        case 0x71:
            opcodeName = "ADC";
            mode = AddressingMode::IZY;
            break;

        case 0x72:
            opcodeName = "KIL";
            mode = AddressingMode::NOP;
            break;

        case 0x73:
            opcodeName = "*RRA";
            mode = AddressingMode::IZY;
            break;

        case 0x74:
            opcodeName = "*NOP";
            mode = AddressingMode::ZPX;
            break;

        case 0x75:
            opcodeName = "ADC";
            mode = AddressingMode::ZPX;
            break;

        case 0x76:
            opcodeName = "ROR";
            mode = AddressingMode::ZPX;
            break;

        case 0x77:
            opcodeName = "*RRA";
            mode = AddressingMode::ZPX;
            break;

        case 0x78:
            opcodeName = "SEI";
            mode = AddressingMode::IMP;
            break;

        case 0x79:
            opcodeName = "ADC";
            mode = AddressingMode::ABY;
            break;

        case 0x7A:
            opcodeName = "*NOP";
            mode = AddressingMode::IMP;
            break;

        case 0x7B:
            opcodeName = "*RRA";
            mode = AddressingMode::ABY;
            break;

        case 0x7C:
            opcodeName = "*NOP";
            mode = AddressingMode::ABX;
            break;

        case 0x7D:
            opcodeName = "ADC";
            mode = AddressingMode::ABX;
            break;

        case 0x7E:
            opcodeName = "ROR";
            mode = AddressingMode::ABX;
            break;

        case 0x7F:
            opcodeName = "*RRA";
            mode = AddressingMode::ABX;
            break;

        case 0x80:
            opcodeName = "*NOP";
            mode = AddressingMode::IMM;
            break;

        case 0x81:
            opcodeName = "STA";
            mode = AddressingMode::IZX;
            break;

        case 0x82:
            opcodeName = "NOP";
            mode = AddressingMode::IMM;
            break;

        case 0x83:
            opcodeName = "*SAX";
            mode = AddressingMode::IZX;
            break;

        case 0x84:
            opcodeName = "STY";
            mode = AddressingMode::ZP0;
            break;

        case 0x85:
            opcodeName = "STA";
            mode = AddressingMode::ZP0;
            break;

        case 0x86:
            opcodeName = "STX";
            mode = AddressingMode::ZP0;
            break;

        case 0x87:
            opcodeName = "*SAX";
            mode = AddressingMode::ZP0;
            break;

        case 0x88:
            opcodeName = "DEY";
            mode = AddressingMode::IMP;
            break;

        case 0x89:
            opcodeName = "NOP";
            mode = AddressingMode::IMM;
            break;

        case 0x8A:
            opcodeName = "TXA";
            mode = AddressingMode::IMP;
            break;

        case 0x8B:
            opcodeName = "XAA";
            mode = AddressingMode::IMM;
            break;

        case 0x8C:
            opcodeName = "STY";
            mode = AddressingMode::ABS;
            break;

        case 0x8D:
            opcodeName = "STA";
            mode = AddressingMode::ABS;
            break;

        case 0x8E:
            opcodeName = "STX";
            mode = AddressingMode::ABS;
            break;

        case 0x8F:
            opcodeName = "*SAX";
            mode = AddressingMode::ABS;
            break;

        case 0x90:
            opcodeName = "BCC";
            mode = AddressingMode::REL;
            break;

        case 0x91:
            opcodeName = "STA";
            mode = AddressingMode::IZY;
            break;

        case 0x92:
            opcodeName = "KIL";
            mode = AddressingMode::NOP;
            break;

        case 0x93:
            opcodeName = "AHX";
            mode = AddressingMode::IZY;
            break;

        case 0x94:
            opcodeName = "STY";
            mode = AddressingMode::ZPX;
            break;

        case 0x95:
            opcodeName = "STA";
            mode = AddressingMode::ZPX;
            break;

        case 0x96:
            opcodeName = "STX";
            mode = AddressingMode::ZPY;
            break;

        case 0x97:
            opcodeName = "*SAX";
            mode = AddressingMode::ZPY;
            break;

        case 0x98:
            opcodeName = "TYA";
            mode = AddressingMode::IMP;
            break;

        case 0x99:
            opcodeName = "STA";
            mode = AddressingMode::ABY;
            break;

        case 0x9A:
            opcodeName = "TXS";
            mode = AddressingMode::IMP;
            break;

        case 0x9B:
            opcodeName = "TAS";
            mode = AddressingMode::ABY;
            break;

        case 0x9C:
            opcodeName = "SHY";
            mode = AddressingMode::ABX;
            break;

        case 0x9D:
            opcodeName = "STA";
            mode = AddressingMode::ABX;
            break;

        case 0x9E:
            opcodeName = "SHX";
            mode = AddressingMode::ABY;
            break;

        case 0x9F:
            opcodeName = "AHX";
            mode = AddressingMode::ABY;
            break;

        case 0xA0:
            opcodeName = "LDY";
            mode = AddressingMode::IMM;
            break;

        case 0xA1:
            opcodeName = "LDA";
            mode = AddressingMode::IZX;
            break;

        case 0xA2:
            opcodeName = "LDX";
            mode = AddressingMode::IMM;
            break;

        case 0xA3:
            opcodeName = "*LAX";
            mode = AddressingMode::IZX;
            break;

        case 0xA4:
            opcodeName = "LDY";
            mode = AddressingMode::ZP0;
            break;

        case 0xA5:
            opcodeName = "LDA";
            mode = AddressingMode::ZP0;
            break;

        case 0xA6:
            opcodeName = "LDX";
            mode = AddressingMode::ZP0;
            break;

        case 0xA7:
            opcodeName = "*LAX";
            mode = AddressingMode::ZP0;
            break;

        case 0xA8:
            opcodeName = "TAY";
            mode = AddressingMode::IMP;
            break;

        case 0xA9:
            opcodeName = "LDA";
            mode = AddressingMode::IMM;
            break;

        case 0xAA:
            opcodeName = "TAX";
            mode = AddressingMode::IMP;
            break;

        case 0xAB:
            opcodeName = "LAX";
            mode = AddressingMode::IMM;
            break;

        case 0xAC:
            opcodeName = "LDY";
            mode = AddressingMode::ABS;
            break;

        case 0xAD:
            opcodeName = "LDA";
            mode = AddressingMode::ABS;
            break;

        case 0xAE:
            opcodeName = "LDX";
            mode = AddressingMode::ABS;
            break;

        case 0xAF:
            opcodeName = "*LAX";
            mode = AddressingMode::ABS;
            break;

        case 0xB0:
            opcodeName = "BCS";
            mode = AddressingMode::REL;
            break;

        case 0xB1:
            opcodeName = "LDA";
            mode = AddressingMode::IZY;
            break;

        case 0xB2:
            opcodeName = "KIL";
            mode = AddressingMode::NOP;
            break;

        case 0xB3:
            opcodeName = "*LAX";
            mode = AddressingMode::IZY;
            break;

        case 0xB4:
            opcodeName = "LDY";
            mode = AddressingMode::ZPX;
            break;

        case 0xB5:
            opcodeName = "LDA";
            mode = AddressingMode::ZPX;
            break;

        case 0xB6:
            opcodeName = "LDX";
            mode = AddressingMode::ZPY;
            break;
            
        case 0xB7:
            opcodeName = "*LAX";
            mode = AddressingMode::ZPY;
            break;

        case 0xB8:
            opcodeName = "CLV";
            mode = AddressingMode::IMP;
            break;

        case 0xB9:
            opcodeName = "LDA";
            mode = AddressingMode::ABY;
            break;

        case 0xBA:
            opcodeName = "TSX";
            mode = AddressingMode::IMP;
            break;

        case 0xBB:
            opcodeName = "LAS";
            mode = AddressingMode::ABY;
            break;

        case 0xBC:
            opcodeName = "LDY";
            mode = AddressingMode::ABX;
            break;

        case 0xBD:
            opcodeName = "LDA";
            mode = AddressingMode::ABX;
            break;

        case 0xBE:
            opcodeName = "LDX";
            mode = AddressingMode::ABY;
            break;

        case 0xBF:
            opcodeName = "*LAX";
            mode = AddressingMode::ABY;
            break;

        case 0xC0:
            opcodeName = "CPY";
            mode = AddressingMode::IMM;
            break;

        case 0xC1:
            opcodeName = "CMP";
            mode = AddressingMode::IZX;
            break;

        case 0xC2:
            opcodeName = "NOP";
            mode = AddressingMode::IMM;
            break;

        case 0xC3:
            opcodeName = "*DCP";
            mode = AddressingMode::IZX;
            break;

        case 0xC4:
            opcodeName = "CPY";
            mode = AddressingMode::ZP0;
            break;

        case 0xC5:
            opcodeName = "CMP";
            mode = AddressingMode::ZP0;
            break;

        case 0xC6:
            opcodeName = "DEC";
            mode = AddressingMode::ZP0;
            break;

        case 0xC7:
            opcodeName = "*DCP";
            mode = AddressingMode::ZP0;
            break;

        case 0xC8:
            opcodeName = "INY";
            mode = AddressingMode::IMP;
            break;

        case 0xC9:
            opcodeName = "CMP";
            mode = AddressingMode::IMM;
            break;

        case 0xCA:
            opcodeName = "DEX";
            mode = AddressingMode::IMP;
            break;

        case 0xCB:
            opcodeName = "AXS";
            mode = AddressingMode::IMM;
            break;

        case 0xCC:
            opcodeName = "CPY";
            mode = AddressingMode::ABS;
            break;

        case 0xCD:
            opcodeName = "CMP";
            mode = AddressingMode::ABS;
            break;

        case 0xCE:
            opcodeName = "DEC";
            mode = AddressingMode::ABS;
            break;

        case 0xCF:
            opcodeName = "*DCP";
            mode = AddressingMode::ABS;
            break;

        case 0xD0:
            opcodeName = "BNE";
            mode = AddressingMode::REL;
            break;

        case 0xD1:
            opcodeName = "CMP";
            mode = AddressingMode::IZY;
            break;

        case 0xD2:
            opcodeName = "KIL";
            mode = AddressingMode::NOP;
            break;

        case 0xD3:
            opcodeName = "*DCP";
            mode = AddressingMode::IZY;
            break;

        case 0xD4:
            opcodeName = "*NOP";
            mode = AddressingMode::ZPX;
            break;

        case 0xD5:
            opcodeName = "CMP";
            mode = AddressingMode::ZPX;
            break;

        case 0xD6:
            opcodeName = "DEC";
            mode = AddressingMode::ZPX;
            break;

        case 0xD7:
            opcodeName = "*DCP";
            mode = AddressingMode::ZPX;
            break;

        case 0xD8:
            opcodeName = "CLD";
            mode = AddressingMode::IMP;
            break;

        case 0xD9:
            opcodeName = "CMP";
            mode = AddressingMode::ABY;
            break;

        case 0xDA:
            opcodeName = "*NOP";
            mode = AddressingMode::IMP;
            break;

        case 0xDB:
            opcodeName = "*DCP";
            mode = AddressingMode::ABY;
            break;

        case 0xDC:
            opcodeName = "*NOP";
            mode = AddressingMode::ABX;
            break;

        case 0xDD:
            opcodeName = "CMP";
            mode = AddressingMode::ABX;
            break;

        case 0xDE:
            opcodeName = "DEC";
            mode = AddressingMode::ABX;
            break;

        case 0xDF:
            opcodeName = "*DCP";
            mode = AddressingMode::ABX;
            break;

        case 0xE0:
            opcodeName = "CPX";
            mode = AddressingMode::IMM;
            break;

        case 0xE1:
            opcodeName = "SBC";
            mode = AddressingMode::IZX;
            break;

        case 0xE2:
            opcodeName = "NOP";
            mode = AddressingMode::IMM;
            break;

        case 0xE3:
            opcodeName = "*ISB";
            mode = AddressingMode::IZX;
            break;

        case 0xE4:
            opcodeName = "CPX";
            mode = AddressingMode::ZP0;
            break;

        case 0xE5:
            opcodeName = "SBC";
            mode = AddressingMode::ZP0;
            break;

        case 0xE6:
            opcodeName = "INC";
            mode = AddressingMode::ZP0;
            break;

        case 0xE7:
            opcodeName = "*ISB";
            mode = AddressingMode::ZP0;
            break;

        case 0xE8:
            opcodeName = "INX";
            mode = AddressingMode::IMP;
            break;

        case 0xE9:
            opcodeName = "SBC";
            mode = AddressingMode::IMM;
            break;

        case 0xEA:
            opcodeName = "NOP";
            mode = AddressingMode::IMP;
            break;

        case 0xEB:
            opcodeName = "*SBC";
            mode = AddressingMode::IMM;
            break;

        case 0xEC:
            opcodeName = "CPX";
            mode = AddressingMode::ABS;
            break;

        case 0xED:
            opcodeName = "SBC";
            mode = AddressingMode::ABS;
            break;

        case 0xEE:
            opcodeName = "INC";
            mode = AddressingMode::ABS;
            break;

        case 0xEF:
            opcodeName = "*ISB";
            mode = AddressingMode::ABS;
            break;

        case 0xF0:
            opcodeName = "BEQ";
            mode = AddressingMode::REL;
            break;

        case 0xF1:
            opcodeName = "SBC";
            mode = AddressingMode::IZY;
            break;

        case 0xF2:
            opcodeName = "KIL";
            mode = AddressingMode::NOP;
            break;

        case 0xF3:
            opcodeName = "*ISB";
            mode = AddressingMode::IZY;
            break;

        case 0xF4:
            opcodeName = "*NOP";
            mode = AddressingMode::ZPX;
            break;

        case 0xF5:
            opcodeName = "SBC";
            mode = AddressingMode::ZPX;
            break;

        case 0xF6:
            opcodeName = "INC";
            mode = AddressingMode::ZPX;
            break;

        case 0xF7:
            opcodeName = "*ISB";
            mode = AddressingMode::ZPX;
            break;

        case 0xF8:
            opcodeName = "SED";
            mode = AddressingMode::IMP;
            break;

        case 0xF9:
            opcodeName = "SBC";
            mode = AddressingMode::ABY;
            break;

        case 0xFA:
            opcodeName = "*NOP";
            mode = AddressingMode::IMP;
            break;

        case 0xFB:
            opcodeName = "*ISB";
            mode = AddressingMode::ABY;
            break;

        case 0xFC:
            opcodeName = "*NOP";
            mode = AddressingMode::ABX;
            break;

        case 0xFD:
            opcodeName = "SBC";
            mode = AddressingMode::ABX;
            break;

        case 0xFE:
            opcodeName = "INC";
            mode = AddressingMode::ABX;
            break;

        case 0xFF:
            opcodeName = "*ISB";
            mode = AddressingMode::ABX;
            break;
    }

    std::stringstream ss;

    ss << opcodeName << " ";
    ss << getAddressWithMode(mode);
    // if its an sta, stx, or sty we need to print what is being stored
    // if its a bit we need to print the bit
    ss << std::uppercase << std::hex << std::setw(2) << std::setfill('0');
    if ((opcodeName == "STA" || opcodeName == "STX" || opcodeName == "STY") && mode != AddressingMode::IZX) {
        ss << " = " << std::setw(2) << (int)miscValue;
    } else if ((opcodeName == "LDX" || opcodeName == "LDY" || opcodeName == "LDA" || opcodeName == "ORA" || opcodeName == "BIT") && mode != AddressingMode::IMM && mode != AddressingMode::IZX) {
        ss << " = " << std::setw(2) << (int)miscValue;
    } else if ((opcodeName == "LDX" || opcodeName == "LDY" || opcodeName == "LDA" || opcodeName == "STA" || opcodeName == "STX" || opcodeName == "STY" || opcodeName == "ORA" || opcodeName == "EOR" || opcodeName == "ADC" || opcodeName == "CMP" || opcodeName == "SBC") && mode == AddressingMode::IZX) {
        ss << " @ " << std::setw(2) << (int)indirectAddr1 << " = " << std::setw(4) << (int)indirectAddr2 << " = " << std::setw(2) << (int)miscValue;
    } else if ((opcodeName == "*DCP") && mode == AddressingMode::IZY) {
        ss << " = " << std::setw(2) << (int)indirectAddr1 << " @ " << std::setw(4) << (int)indirectAddr2 << " = " << std::setw(2) << (int)miscValue;
    }

    return ss.str();
}